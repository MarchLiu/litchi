{"version":3,"file":"lib_index_js.54de11230eda53807252.js","mappings":"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","sources":["webpack://jupyter-litchi/./src/api.ts","webpack://jupyter-litchi/./src/index.ts","webpack://jupyter-litchi/./src/model.ts","webpack://jupyter-litchi/./src/toolbar.tsx"],"sourcesContent":["// SendRequestComponent.tsx\n\nimport { ISettingRegistry } from \"@jupyterlab/settingregistry\";\n\nexport interface IMessage {\n  role: string;\n  content: string;\n}\n\nexport class Message implements IMessage {\n  role: string;\n  content: string;\n\n  constructor(role: string, content: string) {\n    this.role = role;\n    this.content = content;\n  }\n\n  static async startUp(settings: ISettingRegistry.ISettings): Promise<Message> {\n    const system = settings.get('system').composite!.toString();\n    return new Message('system', system);\n  }\n}\n\nclass ChatRequest {\n  model: string;\n  stream: boolean;\n  messages: Message[];\n\n  constructor(model: string, messages: Message[], stream: boolean = false) {\n    this.model = model;\n    this.stream = stream;\n    this.messages = messages;\n  }\n}\n\nexport async function chat(\n  url: string,\n  key: string | undefined,\n  session: Message[],\n  message: Message,\n  model: string\n): Promise<any> {\n  try {\n    const messages = [...session, message];\n    const request = new ChatRequest(model, messages);\n    const headers = requestHeaders(key);\n\n    const resp = await fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(request)\n    });\n    const data = await resp.json();\n    if (data.message !== undefined) {\n      return data.message;\n    } else if (data.choices !== undefined) {\n      const msgs = data.choices.map((c: { message: any }) => c.message);\n      if (msgs.length > 0) {\n        return msgs[0];\n      }\n    }\n  } catch (error) {\n    console.error('Error sending request to server:', error);\n  }\n  console.error('message not success');\n  return { message: '', role: 'assistant' };\n}\n\nexport async function listModels(url: string, key: string | undefined) {\n  const headers = requestHeaders(key);\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: headers\n  });\n  return response\n    .json()\n    .then(data => {\n      if (data.models !== undefined) {\n        return data.models.map((m: { name: any }) => m.name);\n      } else if (data.data !== undefined) {\n        return data.data.map((m: { id: any }) => m.id);\n      } else {\n        console.error(`except data ${JSON.stringify(data, null, 2)}`);\n        return [];\n      }\n    })\n    .catch(e => {\n      console.error(e);\n      return [];\n    });\n}\n\nfunction requestHeaders(key: string | undefined) {\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  });\n  if (key !== undefined && key.length > 0) {\n    headers.set('Authorization', key);\n  }\n  return headers;\n}","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette, IToolbarWidgetRegistry } from '@jupyterlab/apputils';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { chat, IMessage, Message } from './api';\nimport { MarkdownCellModel } from '@jupyterlab/cells';\nimport { INotebookTracker, Notebook,  } from '@jupyterlab/notebook';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { WidgetExtension } from './toolbar';\nimport { ICellModel } from '@jupyterlab/cells';\nimport { Model } from './model';\nimport { ITranslator } from '@jupyterlab/translation';\n\nconst LITCHI_ID = 'jupyter-litchi:jupyter-litchi';\n\nnamespace CommandIDs {\n  export const CHAT = 'litchi:chat';\n  export const CONTEXTUAL = 'litchi:contextual';\n  export const HISTORICAL = 'litchi:historical';\n  export const SELECTED = 'litchi:selected';\n  export const TOGGLE_ROLE = 'litchi:show-roles-toggle';\n}\nconst LITCHI_MESSAGE_ROLE = 'litchi:message:role';\n\n/**\n * The plugin registration information.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: LITCHI_ID,\n  description: 'Add a widget to the notebook header.',\n  autoStart: true,\n  activate: activate,\n  requires: [\n    ICommandPalette,\n    INotebookTracker,\n    ISettingRegistry,\n    IToolbarWidgetRegistry,\n    ITranslator,\n    IStateDB\n  ]\n};\n\nexport async function activate(\n  app: JupyterFrontEnd,\n  palette: ICommandPalette,\n  tracker: INotebookTracker,\n  settingRegistry: ISettingRegistry,\n  toolbarRegistry: IToolbarWidgetRegistry,\n  translator: ITranslator,\n  state: IStateDB\n) {\n  const model = new Model();\n  const widget = new WidgetExtension(\n    LITCHI_ID,\n    app,\n    settingRegistry,\n    state,\n    model\n  );\n\n  app.docRegistry.addWidgetExtension('Notebook', widget);\n\n  app.commands.addCommand(CommandIDs.CHAT, {\n    label: 'Litchi Chat',\n    execute: async () => {\n      await chatActivate(app, settingRegistry, tracker, model, state, 'chat');\n    },\n    isEnabled: () => !model.processing\n  });\n  palette.addItem({ command: CommandIDs.CHAT, category: 'jupyter-Litchi' });\n\n  app.commands.addCommand(CommandIDs.CONTEXTUAL, {\n    label: 'Litchi Chat Contextual',\n    execute: async () => {\n      await chatActivate(app, settingRegistry, tracker, model, state, 'contextual');\n    },\n    isEnabled: () => !model.processing\n  });\n  palette.addItem({\n    command: CommandIDs.CONTEXTUAL,\n    category: 'jupyter-Litchi'\n  });\n\n  app.commands.addCommand(CommandIDs.HISTORICAL, {\n    label: 'Litchi Chat Historical',\n    execute: async () => {\n      await chatActivate(app, settingRegistry, tracker, model, state, 'historical');\n    },\n    isEnabled: () => !model.processing\n  });\n  palette.addItem({\n    command: CommandIDs.HISTORICAL,\n    category: 'jupyter-Litchi'\n  });\n\n  app.commands.addCommand(CommandIDs.SELECTED, {\n    label: 'Litchi Chat Selected',\n    execute: async () => {\n      await chatActivate(app, settingRegistry, tracker, model, state, 'selected');\n    },\n    isEnabled: () => !model.processing\n  });\n  palette.addItem({\n    command: CommandIDs.SELECTED,\n    category: 'jupyter-Litchi'\n  });\n\n  model.stateChanged.connect(w => {\n    refreshPage(tracker, w.showRoles);\n  });\n  app.commands.addCommand(CommandIDs.TOGGLE_ROLE, {\n    label: 'Litchi Show Roles Toggle',\n    execute: async () => {\n      model.showRoles = !model.showRoles;\n    },\n    isToggled: () => model.showRoles\n  });\n  palette.addItem({\n    command: CommandIDs.TOGGLE_ROLE,\n    category: 'jupyter-Litchi'\n  });\n}\n\nasync function chatActivate(\n  app: JupyterFrontEnd,\n  registry: ISettingRegistry,\n  tracker: INotebookTracker,\n  model: Model,\n  state: IStateDB,\n  subTask: 'chat' | 'contextual' | 'historical' | 'selected'\n) {\n  try {\n    if (model.processing) {\n      console.log('an other process is running');\n      return;\n    }\n\n    model.processing = true;\n    const cell = tracker.activeCell;\n    if (cell === null) {\n      console.error('litchi:chat exit because any cell not been selected');\n      return;\n    }\n\n    const notebook = tracker.currentWidget?.content;\n    if (notebook === undefined) {\n      console.error('litchi:chat exit because the notebook not found');\n      return;\n    }\n\n    cell.model.sharedModel.setMetadata(LITCHI_MESSAGE_ROLE, 'user');\n    const content = cell.model.sharedModel.source;\n    // eslint-disable-next-line eqeqeq\n    if (content === null) {\n      console.error('litchi:chat exit because the content of cell is null');\n      return;\n    }\n    const latest = cellToMessage(cell.model);\n\n    const aiModel = (await state.fetch('litchi:model'))?.toString();\n    if (aiModel === null || aiModel === undefined) {\n      console.error('litchi:chat exit because not any model selected');\n      return;\n    }\n\n    const settings = await registry.load(LITCHI_ID);\n    const session: IMessage[] = [\n      await Message.startUp(settings),\n      ...createContext(subTask, notebook)\n    ];\n\n    const url = settings.get('chat')!.composite!.toString();\n    const key = settings.get('key')?.composite?.toString();\n\n    const message = await chat(url, key, session, latest, aiModel!);\n    if (message.content && message.content.length > 0) {\n      const cellModel = new MarkdownCellModel();\n      cellModel.sharedModel.setSource(message.content);\n      cellModel.sharedModel.setMetadata(LITCHI_MESSAGE_ROLE, message.role);\n    }\n\n    const { commands } = app;\n    commands.execute('notebook:insert-cell-below').then(() => {\n      commands.execute('notebook:change-cell-to-markdown');\n    });\n\n    const newCell = notebook.activeCell!;\n    const newModel = newCell.model.sharedModel;\n    newModel.setSource(message.content);\n    newModel.setMetadata(LITCHI_MESSAGE_ROLE, message.role);\n  } finally {\n    model.processing = false;\n  }\n}\n\nfunction createContext(command: string, notebook: Notebook): IMessage[] {\n  switch (command) {\n    case 'chat':\n      return [];\n    case 'contextual': {\n      const stop = notebook.activeCellIndex;\n      if (stop === undefined) {\n        return [];\n      }\n      let messages: IMessage[] = [];\n      for (let idx = 0; idx < stop; idx++) {\n        const cell = notebook.model!.cells.get(idx);\n        const model = cell.sharedModel;\n        if (\n          LITCHI_MESSAGE_ROLE in model.metadata &&\n          model.metadata[LITCHI_MESSAGE_ROLE] !== undefined\n        ) {\n          messages = [...messages, cellToMessage(cell)];\n        }\n      }\n      return messages;\n    }\n    case 'historical': {\n      const stop = notebook.activeCellIndex;\n      let messages: IMessage[] = [];\n      for (let idx = 0; idx < stop; idx++) {\n        const cell = notebook.model!.cells.get(idx);\n        const model = cell.sharedModel;\n        messages = [...messages, cellToMessage(cell)];\n        if (\n          !(LITCHI_MESSAGE_ROLE in model.metadata) ||\n          model.metadata[LITCHI_MESSAGE_ROLE] === undefined\n        ) {\n          cell.metadata[LITCHI_MESSAGE_ROLE] = 'user';\n        }\n      }\n      return messages;\n    }\n    case 'selected': {\n      const cells = notebook.selectedCells;\n      let messages: IMessage[] = [];\n      for (let idx = 0; idx < cells.length; idx++) {\n        const cell = cells[idx].model;\n        const model = cell.sharedModel;\n        if (\n          !(LITCHI_MESSAGE_ROLE in model.metadata) ||\n          cell.metadata[LITCHI_MESSAGE_ROLE] === undefined\n        ) {\n          cell.metadata[LITCHI_MESSAGE_ROLE] = 'user';\n        }\n        messages = [...messages, cellToMessage(cell)];\n      }\n      return messages;\n    }\n  }\n  return [];\n}\n\nfunction cellToMessage(cell: ICellModel): IMessage {\n  const model = cell.sharedModel;\n  let role = 'user';\n  if (LITCHI_MESSAGE_ROLE in cell.metadata) {\n    role = cell.getMetadata(LITCHI_MESSAGE_ROLE)!.toString();\n  }\n  let content = model.source;\n  if (model.cell_type === 'code') {\n    let language = '';\n    const tokens = cell.mimeType.split('-');\n    if (tokens.length > 1) {\n      language = tokens[tokens.length - 1];\n    }\n    content = `\\`\\`\\`${language}\\n${content}\\n\\`\\`\\``;\n  }\n  return new Message(role, content);\n}\n\nasync function refreshPage(\n  tracker: INotebookTracker,\n  showRoles: boolean\n): Promise<void> {\n  const notebook = tracker.currentWidget;\n  if (notebook === null) {\n    console.log('no notebook was selected');\n    return;\n  }\n  const cells = notebook!.model!.cells!;\n  if (showRoles) {\n    for (let idx = 0; idx < cells.length; idx++) {\n      const cell = cells.get(idx);\n      if (LITCHI_MESSAGE_ROLE in cell.sharedModel.metadata) {\n        const role = cell.sharedModel\n          .getMetadata(LITCHI_MESSAGE_ROLE)!\n          .toString();\n        notebook?.content.widgets[idx].inputArea?.addClass(\n          `jp-litchi-role-${role}-Cell`\n        );\n      }\n    }\n  } else {\n    for (let idx = 0; idx < cells.length; idx++) {\n      const cell = cells.get(idx);\n      if (LITCHI_MESSAGE_ROLE in cell.sharedModel.metadata) {\n        const role = cell.sharedModel\n          .getMetadata(LITCHI_MESSAGE_ROLE)!\n          .toString();\n        notebook?.content.widgets[idx].inputArea?.removeClass(\n          `jp-litchi-role-${role}-Cell`\n        );\n      }\n    }\n  }\n}\n\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n","import { VDomModel } from \"@jupyterlab/apputils\";\n\nexport class Model extends VDomModel {\n  private _showRoles: boolean;\n  private _processing: boolean;\n\n  constructor() {\n    super();\n    this._showRoles = false;\n    this._processing = false;\n  }\n\n  get showRoles(): boolean {\n    return this._showRoles;\n  }\n  set showRoles(v: boolean) {\n    if (v !== this._showRoles) {\n      this._showRoles = v;\n      this.stateChanged.emit();\n    }\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  set processing(value: boolean) {\n    this._processing = value;\n    this.stateChanged.emit();\n  }\n}","import { IDisposable, DisposableDelegate } from '@lumino/disposable';\n\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\n\nimport { NotebookPanel, INotebookModel } from '@jupyterlab/notebook';\nimport { ReactWidget } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\n\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { listModels } from './api';\nimport { Model } from './model';\n\nfunction ModelsComponent(props: {\n  appId: string;\n  app: JupyterFrontEnd;\n  registry: ISettingRegistry;\n  state: IStateDB;\n  model: Model;\n}) {\n  const [models, setModels] = React.useState<string[]>([]);\n  const [selectedModel, setSelectedModel] = React.useState<string>('');\n  const [processing, setProcessing] = React.useState(props.model.processing);\n\n  React.useEffect(() => {\n    async function loadModels() {\n      try {\n        const settings = await props.registry.load(props.appId);\n        const baseUrl = settings.get('list-models').composite!.toString();\n        const key = settings.get('key').composite?.toString();\n        const modelList = await listModels(baseUrl, key).catch(console.error);\n        setModels(modelList);\n        if (modelList.length > 0) {\n          setSelectedModel(modelList[0]);\n          await props.state.save('litchi:model', modelList[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching models:', error);\n      }\n    }\n\n    loadModels();\n  }, []);\n\n  React.useEffect(() => {\n    const stateChanged = props.model.stateChanged;\n    stateChanged.connect((m, args) => {\n      setProcessing(m.processing);\n    });\n  }, [props.model]);\n\n  const handleChange = async (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const model = event.target.value;\n    await props.state.save('litchi:model', model);\n    setSelectedModel(model);\n  };\n\n  const handleChatClick = async (event: React.MouseEvent) => {\n    const { commands } = props.app;\n    await commands.execute('litchi:chat');\n  };\n\n  const handleContextualClick = async (event: React.MouseEvent) => {\n    const { commands } = props.app;\n    await commands.execute('litchi:contextual');\n  };\n\n  const handleHistoricalClick = async (event: React.MouseEvent) => {\n    const { commands } = props.app;\n    await commands.execute('litchi:historical');\n  };\n\n  const handleSelectedClick = async (event: React.MouseEvent) => {\n    const { commands } = props.app;\n    await commands.execute('litchi:selected');\n  };\n\n  return (\n    <span>\n      {'(*☻-☻*)'} <label htmlFor=\"model-select\"> Select Model:</label>\n      <select id=\"model-select\" value={selectedModel} onChange={handleChange}>\n        {models.map(model => (\n          <option key={model} value={model}>\n            {model}\n          </option>\n        ))}\n      </select>{' '}\n      <button disabled={processing} onClick={handleChatClick}>\n        Chat\n      </button>{' '}\n      <button disabled={processing} onClick={handleContextualClick}>\n        Contextual\n      </button>{' '}\n      <button disabled={processing} onClick={handleHistoricalClick}>\n        Historical\n      </button>{' '}\n      <button disabled={processing} onClick={handleSelectedClick}>\n        Selected\n      </button>\n    </span>\n  );\n}\n\n/**\n * A notebook widget extension that adds a widget in the notebook header (widget below the toolbar).\n */\nexport class WidgetExtension\n  extends ReactWidget\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  private readonly state: IStateDB;\n  private readonly app: JupyterFrontEnd;\n  private readonly registry: ISettingRegistry;\n  private readonly appId: string;\n  public readonly model: Model;\n\n  protected render() {\n    return (\n      <ModelsComponent\n        app={this.app}\n        state={this.state}\n        registry={this.registry}\n        appId={this.appId}\n        model={this.model}\n      />\n    );\n  }\n\n  constructor(\n    appId: string,\n    app: JupyterFrontEnd,\n    registry: ISettingRegistry,\n    state: IStateDB,\n    model: Model\n  ) {\n    super();\n    this.state = state;\n    this.app = app;\n    this.registry = registry;\n    this.appId = appId;\n    this.model = model;\n    this.id = 'litchi-toolbar';\n  }\n\n  /**\n   * Create a new extension object.\n   */\n  createNew(\n    panel: NotebookPanel,\n    context: DocumentRegistry.IContext<INotebookModel>\n  ): IDisposable {\n    this.addClass('jp-litchi-toolbar');\n    panel.contentHeader.insertWidget(0, this);\n    return new DisposableDelegate(() => {\n      this.dispose();\n    });\n  }\n}\n"],"names":[],"sourceRoot":""}